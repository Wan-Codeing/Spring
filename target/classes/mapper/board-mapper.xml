<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="boardMapper">

   <resultMap id="boardTypeResultSet" type="boardtype">
      <id column="BOARD_CD" property="boardCd"/>
      <result column="BOARD_NAME" property="boardName"/>
   </resultMap>

   <resultMap id="boardResultSet" type="board">
      <id column="BOARD_NO" property="boardNo"/>
      <result column="BOARD_TITLE" property="boardTitle"/>
      <result column="BOARD_WRITER" property="boardWriter"/>
      <result column="CREATE_DATE" property="createDate"/>
      <result column="COUNT" property="count"/>
   </resultMap>
   
   <resultMap id="boardDetailResultSet" type="boardExt">
   		<id column="BOARD_NO" property="boardNo"/>
   		<result column="BOARD_TITLE" property = "boardTitle"/>
   		<result column="BOARD_CONTENT" property = "boardContent"/>
   		<result column="COUNT" property = "count"/>
   		<result column="CREATE_DATE" property = "createDate"/>
   		<result column="BOARD_WRITER" property = "boardWriter"/>
   		
   		<collection property="attachList" ofType="attachment" javaType="java.util.List">
   			<id column="FILE_NO" property="fileNo"/>
   			<result column="REF_BNO" property="refBno"/>
   			<result column="ORIGIN_NAME" property="originName"/>
   			<result column="CHANGE_NAME" property="changeName"/>
   			<result column="FILE_PATH" property="filePath"/>
   		</collection>
   		<!-- 
   			collection ofType : 제네릭 타입
   						javaType : 자바의 자료형 => java.util.List<Attachment>
   						property : collection 결과를 저장할 boardExt타입의 필드명
   		 -->
   		 <collection property="replyList" ofType="reply" javaType="java.util.List"
					 select="selectReplyList" column="BOARD_NO"/>
		<!-- 
			selectReplyList의 조회결과를 boardExt vo객체의 replyList필드에 담겠다는 의미
			replyList에 담을때 java.util.List<reply>객체를 생성해서 담을예정
			selectReplyList를 호출할떄 필요한 데이터(boardNo)의 경우 column="BOARD_NO"를 사용해서 현재 조회된 resultMap내부의 BOARD_NO값을 전달해줌
		 -->
   </resultMap>
   
   <resultMap type="reply" id="replyResultSet">
   		<id column="REPLY_NO" property="replyNo"/>
		<result column="REPLY_CONTENT" property="replyContent"/>
		<result column="REF_BNO" property="refBno"/>
		<result column="REPLY_WRITER" property="replyWriter"/>
		<result column="CREATE_DATE" property="createDate"/>
   </resultMap>

   <select id="selectBoardTypeList" resultMap="boardTypeResultSet">
      SELECT *
      FROM BOARD_TYPE
      ORDER BY BOARD_CD
   </select>
   
   <select id="selectList" parameterType="hashmap" resultMap="boardResultSet">
      SELECT
         BOARD_NO,
         BOARD_TITLE,
         USER_NAME AS BOARD_WRITER,
         COUNT,
         B.CREATE_DATE
      FROM BOARD B
      JOIN MEMBER M ON B.BOARD_WRITER = M.USER_NO
      WHERE B.STATUS = 'Y' AND BOARD_CD = '${boardCode}'
      <if test="keyword != null and keyword != ''"> 
	     AND
		    <choose>
	      	<when test="condition == 'writer'">
	      		USER_NAME LIKE '%${keyword}%'
	      	</when>
	      	<when test="condition == 'title'">
	      		BOARD_TITLE LIKE '%${keyword}%'
	      	</when>
	      	<when test="condition == 'content'">
	      		BOARD_CONTENT LIKE '%${keyword}%'
	      	</when>
	      	<when test="condition == 'titleAndContent'">
	      		(BOARD_TITLE LIKE '%${keyword}%'
	      		OR BOARD_CONTENT LIKE '%${keyword}%')
	      	</when>
	      </choose>
	    </if>
      ORDER BY B.CREATE_DATE DESC
   </select>
   
   <select id="selectListCount" parameterType="hashmap" resultType="int">
	   	SELECT COUNT(*)
	    FROM BOARD B
	    JOIN MEMBER M ON B.BOARD_WRITER = M.USER_NO
	    WHERE B.STATUS = 'Y' AND BOARD_CD = '${boardCode}'
	    <if test="keyword != null and keyword != ''"> 
	     AND
		    <choose>
	      	<when test="condition == 'writer'">
	      		USER_NAME LIKE '%${keyword}%'
	      	</when>
	      	<when test="condition == 'title'">
	      		BOARD_TITLE LIKE '%${keyword}%'
	      	</when>
	      	<when test="condition == 'content'">
	      		BOARD_CONTENT LIKE '%${keyword}%'
	      	</when>
	      	<when test="condition == 'titleAndContent'">
	      		(BOARD_TITLE LIKE '%${keyword}%'
	      		OR BOARD_CONTENT LIKE '%${keyword}%')
	      	</when>
	      </choose>
	    </if>
	    ORDER BY B.CREATE_DATE DESC
   </select>
   
   <insert id="insertBoard" parameterType="board" useGeneratedKeys="true">
   		<selectKey keyProperty="boardNo" resultType="int" order="BEFORE">
   			SELECT SEQ_BNO.NEXTVAL FROM DUAL
   		</selectKey>
   		INSERT INTO BOARD(
   			BOARD_NO,
   			BOARD_TITLE,
   			BOARD_WRITER,
   			BOARD_CONTENT,
   			BOARD_CD
   		) VALUES(
			#{boardNo},
			#{boardTitle},
			#{boardWriter},
			#{boardContent},
			#{boardCd}		
   		)
   </insert>
  
  <insert id="insertAttachment" parameterType="attachment">
  		INSERT INTO ATTACHMENT(
  			FILE_NO,
  			REF_BNO,
  			ORIGIN_NAME,
  			CHANGE_NAME,
  			FILE_PATH
  		) VALUES(
  			SEQ_FNO.NEXTVAL,
  			#{refBno},
  			#{originName},
  			#{changeName},
  			#{filePath}
  		)
  </insert>
  
  <!-- 
  	동적 SQL문중 <foreach>
  	- 특징 SQL 구문을 반복할때 사용
  	- 반복되는 쿼리문 사이에 구분자를 추가할수 있음
  	
  	collection : 반복할 객체의 타입
  	item : collection에서 순차적으로 꺼낸 값을 저장하는 변수
  	index : 현재 반복접근중인 인덱스(0,1,2,3,4....)
  	
  	open : 반복전에 출력할 sql
  	close : 반복후에 출력할 sql
  	separtor : 반복 사이 구분자
   -->
   
   <insert id="insertAttachmentList" parameterType="list">
   		INSERT INTO ATTACHMENT(FILE_NO,ORIGIN_NAME,CHANGE_NAME,REF_BNO,FILE_PATH)
   		SELECT SEQ_FNO.NEXTVAL AS FILE_NO, C.* FROM(
   			<foreach collection="list" item="attach" separator="UNION ALL">
   				SELECT
   					#{attach.originName} as ORIGIN_NAME,
   					#{attach.changeName} as CHANGE_NAME,
   					#{attach.refBno} as REF_BNO,
   					#{attach.filePath} as FILE_PATH
   				FROM DUAL
   			</foreach>
   		) C
   </insert>
   
   <select id="selectBoard" parameterType="int" resultMap="boardDetailResultSet">
   		SELECT
   			BOARD_NO,
   			USER_ID BOARD_WRITER,
   			BOARD_TITLE,
   			BOARD_CONTENT,
   			COUNT,
   			TO_CHAR(B.CREATE_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') CREATE_DATE,
   			AT.*
   		FROM BOARD B
   		LEFT JOIN ATTACHMENT AT ON BOARD_NO = REF_BNO
   		JOIN MEMBER M ON USER_NO = BOARD_WRITER
   		WHERE BOARD_NO = #{boardNo}
   </select>
   
   <update id="increaseCount" parameterType="int">
   		UPDATE BOARD
   		SET COUNT = COUNT + 1
   		WHERE BOARD_NO = #{bno}
   </update>
   
    <select id="selectReplyList" resultMap="replyResultSet" parameterType="int">
   		SELECT 
   			REPLY_NO,
   			REPLY_CONTENT,
   			REF_BNO,
   			USER_ID REPLY_WRITER,
   			R.CREATE_DATE,
   			R.STATUS
   		FROM REPLY R
   		JOIN MEMBER M ON R.REPLY_WRITER = M.USER_NO
   		WHERE REF_BNO = #{bno}
   			AND R.STATUS = 'Y'
   </select>
   
   <insert id="insertReply" parameterType="reply">
   		INSERT INTO REPLY(REPLY_NO,REPLY_WRITER,REPLY_CONTENT,CREATE_DATE,REF_BNO)
   		VALUES (SEQ_RNO.NEXTVAL,TO_NUMBER(#{replyWriter}),#{replyContent},SYSDATE,#{refBno})
   </insert>
</mapper>